// Mocks generated by Mockito 5.4.6 from annotations
// in attendance_tracker/test/unit/providers/attendance_provider_callback_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:attendance_tracker/models/models.dart' as _i4;
import 'package:attendance_tracker/repositories/attendance_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AttendanceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAttendanceRepository extends _i1.Mock
    implements _i2.AttendanceRepository {
  MockAttendanceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.AttendanceSession?> createOrGetSession(
    int? classId,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createOrGetSession, [classId, date]),
            returnValue: _i3.Future<_i4.AttendanceSession?>.value(),
          )
          as _i3.Future<_i4.AttendanceSession?>);

  @override
  _i3.Future<List<_i4.AttendanceSession>> getSessionsByClassId(int? classId) =>
      (super.noSuchMethod(
            Invocation.method(#getSessionsByClassId, [classId]),
            returnValue: _i3.Future<List<_i4.AttendanceSession>>.value(
              <_i4.AttendanceSession>[],
            ),
          )
          as _i3.Future<List<_i4.AttendanceSession>>);

  @override
  _i3.Future<_i4.AttendanceSession?> getSessionById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSessionById, [id]),
            returnValue: _i3.Future<_i4.AttendanceSession?>.value(),
          )
          as _i3.Future<_i4.AttendanceSession?>);

  @override
  _i3.Future<bool> deleteSession(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSession, [id]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteAttendanceRecords(int? sessionId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAttendanceRecords, [sessionId]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveAttendanceRecords(
    int? sessionId,
    List<_i4.AttendanceRecord>? records,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveAttendanceRecords, [sessionId, records]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.AttendanceRecord>> getRecordsBySessionId(
    int? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsBySessionId, [sessionId]),
            returnValue: _i3.Future<List<_i4.AttendanceRecord>>.value(
              <_i4.AttendanceRecord>[],
            ),
          )
          as _i3.Future<List<_i4.AttendanceRecord>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getAttendanceWithStudentInfo(
    int? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAttendanceWithStudentInfo, [sessionId]),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> updateAttendanceRecord(_i4.AttendanceRecord? record) =>
      (super.noSuchMethod(
            Invocation.method(#updateAttendanceRecord, [record]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getAttendanceByStudentId(
    int? studentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAttendanceByStudentId, [studentId]),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);
}
