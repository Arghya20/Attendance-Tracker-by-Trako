// Mocks generated by Mockito 5.4.6 from annotations
// in attendance_tracker/test/unit/repositories/class_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:attendance_tracker/services/database_helper.dart' as _i6;
import 'package:attendance_tracker/services/database_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.getter(#database)),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  _i4.Future<_i2.Database> initDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#initDatabase, []),
            returnValue: _i4.Future<_i2.Database>.value(
              _FakeDatabase_0(this, Invocation.method(#initDatabase, [])),
            ),
          )
          as _i4.Future<_i2.Database>);

  @override
  String getCurrentDateTime() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentDateTime, []),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.method(#getCurrentDateTime, []),
            ),
          )
          as String);

  @override
  _i4.Future<int> insert(String? table, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#insert, [table, data]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAll(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#getAll, [table]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<Map<String, dynamic>?> getById(String? table, int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getById, [table, id]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<int> update(String? table, Map<String, dynamic>? data, int? id) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table, data, id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<int> delete(String? table, int? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table, id]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<Map<String, dynamic>>> rawQuery(
    String? query, [
    List<dynamic>? arguments,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#rawQuery, [query, arguments]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<dynamic>> batch(dynamic Function(_i2.Batch)? operations) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [operations]),
            returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i4.Future<List<dynamic>>);

  @override
  _i4.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i6.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<Map<String, dynamic>>> getClassesWithStats() =>
      (super.noSuchMethod(
            Invocation.method(#getClassesWithStats, []),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> pinClass(int? classId, int? pinOrder) =>
      (super.noSuchMethod(
            Invocation.method(#pinClass, [classId, pinOrder]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> unpinClass(int? classId) =>
      (super.noSuchMethod(
            Invocation.method(#unpinClass, [classId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<int> getNextPinOrder() =>
      (super.noSuchMethod(
            Invocation.method(#getNextPinOrder, []),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getStudentsByClassId(int? classId) =>
      (super.noSuchMethod(
            Invocation.method(#getStudentsByClassId, [classId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getStudentsWithAttendanceStats(
    int? classId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getStudentsWithAttendanceStats, [classId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<Map<String, dynamic>?> getSessionByClassAndDate(
    int? classId,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSessionByClassAndDate, [classId, date]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getSessionsByClassId(int? classId) =>
      (super.noSuchMethod(
            Invocation.method(#getSessionsByClassId, [classId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getRecordsBySessionId(
    int? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsBySessionId, [sessionId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAttendanceBySessionWithStudentInfo(
    int? sessionId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAttendanceBySessionWithStudentInfo, [
              sessionId,
            ]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAttendanceByStudentId(
    int? studentId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAttendanceByStudentId, [studentId]),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> saveAttendanceRecords(
    int? sessionId,
    List<Map<String, dynamic>>? records,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveAttendanceRecords, [sessionId, records]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteClass(int? classId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteClass, [classId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteStudent(int? studentId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteStudent, [studentId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAttendanceSession(int? sessionId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAttendanceSession, [sessionId]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
